require 'erb'
require 'yard/doctest/rake'

task :default => :test

def what_day
  ENV
    .fetch("DAY", Time.now.day)
    .to_i
    .to_s
    .rjust(2, '0')
end

task :run do |t, args|
  day = what_day
  puts "OK. Let's run Day#{day}!\n\n"
  require "./day#{day}"
  Object.const_get("Day#{day}").go
end

desc "Run the tests my way; set env var DAY to run a day other than today"
task :test do |t, args|
  day = what_day
  puts "Wooo! Let's test Day#{day}!\n\n"

  File.open('./doctest_helper.rb', 'w') do |file|
    file.write <<~TEST_HELPER
      require 'day#{day}'

      def day
        @day ||= Day#{day}.new(Day#{day}::EXAMPLE_INPUT)
      end
    TEST_HELPER
  end

  Rake::Task["yard:doctest"].invoke
end

YARD::Doctest::RakeTask.new do |task|
  task.doctest_opts = %w[-v] << ENV.fetch("TESTOPTS", "").split(" ")
  task.pattern = "./day#{what_day}.rb"
end

task :new do
  day = what_day
  Rake::Task["day#{day}"].invoke
end

rule ( /^day\d\d$/ ) do |task|
  output_file = "./#{task.name}.rb"
  if File.exist?(output_file)
    puts "🛑 No. I'm protecting you from yourself. That file already exists."
  else
    puts "🎶 bring on the newwww daaaaay 🎶"
    File.write(
      output_file,
      ERB.new(File.read('./template.rb.erb'))
         .result_with_hash(day: task.name)
    )
    input_file = "../inputs/#{task.name}-input.txt"
    system("pbpaste > #{input_file}")
    puts "📝 wrote the clipboard to #{input_file}, hope it was right:"
    system("head -n 5 #{input_file}")
  end
end
